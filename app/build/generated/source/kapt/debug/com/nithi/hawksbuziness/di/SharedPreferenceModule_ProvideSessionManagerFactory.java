// Generated by Dagger (https://dagger.dev).
package com.nithi.hawksbuziness.di;

import android.content.SharedPreferences;
import com.nithi.hawksbuziness.preferences.PreferenceManger;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SharedPreferenceModule_ProvideSessionManagerFactory implements Factory<PreferenceManger> {
  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public SharedPreferenceModule_ProvideSessionManagerFactory(
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public PreferenceManger get() {
    return provideSessionManager(sharedPreferencesProvider.get());
  }

  public static SharedPreferenceModule_ProvideSessionManagerFactory create(
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new SharedPreferenceModule_ProvideSessionManagerFactory(sharedPreferencesProvider);
  }

  public static PreferenceManger provideSessionManager(SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNullFromProvides(SharedPreferenceModule.INSTANCE.provideSessionManager(sharedPreferences));
  }
}
